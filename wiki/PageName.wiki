#summary One-sentence summary of this page.

= Introduction =

Add your content here.


= Details =

Add your content here.  Format your content with:
  * Text in *bold* or _italic_
  * Headings, paragraphs, and lists
  * Automatic links to other wiki pages
 {{{
import java.util.*;  //faz com que Classes do pacote java.util 
                    //possam ser chamadas diretamente
                    //pacotes são coleções de classes da API de Java
 
//Definindo uma classe que extende Vector (uma lista ordenada)
public class ClasseLouca extends Vector
{
    // declare as variáveis internas aqui
    private int x; //private antes de int indica que a variável é privada
 
    private int y = 10; //vc pode inicializar as variáveis diretamente
 
    //um array de inteiros - inteiro é um tipo nativo, por isto
    // começa com minúscula
    private int[] array = new int[10]; //máximo de 10 elementos
 
    //um array de Strings - String é um objeto (que possui classe, etc)
    private String[] stArray = new String[10];
 
    /**
     * Construtor: chamado quando vc cria um objeto. Pode ter parâmetros
     * assim como um método qualquer, só que não tem valor de retorno.
     */
    public ClasseLouca(int valorX)
    {
        // ou você pode inicializar as variáveis no construtor
        this.x = valorX; //this quer dizer "este objeto"
                        //muitas vezes é opcional, mas
                        //ajuda a deixar claro quando vc
                        //está usando uma variável local (que morre com 
                        //no fim do método) ou uma variável de instancia
    }
 
    /**
     * Um método público que gera números aleatórios
     */
    public double generateRandomDe0aMeio()
    {
        Random generator = new Random();
        double r = generator.nextDouble();
        return r * 0.5;
    }
 
    /*
     * um método privado (e feliz) que imprime algo (mas não retorna nada)
     */
    public void happyMethod()
    {
        // as estruturas de controle (if, while, etc)
        //e os operadores são praticamente identicos aos de C
        if(x > 5) {
            //como imprimir algo, com quebra de linha no final
            System.out.println("I am happy!");
        } else {
            System.out.println("I am sad");
        }
    }
 
    //Adiciona adiciona elementos a posições dos dois arrays
    public void addsToArray(int i, String s)
    {
        array[4] = i;
        stArray[6] = s;
    }
 
    //retorna um elemento qualquer do stArray
    public String getStArray(int index)
    {
        return stArray[index];
    }
 
    //diz se um elemento de stArray é nulo (null)
    public boolean oQueENull(int index)
    {
        return stArray[index] == null;
    }
 
    private int privateMethod()
    {
        return 10;
    }
}
}}}